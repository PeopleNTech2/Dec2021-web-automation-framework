<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Amazon Automation" duration-ms="12971" started-at="2022-02-06T19:36:26 EST" finished-at="2022-02-06T19:36:39 EST">
    <groups>
    </groups>
    <test name="Amazon test" duration-ms="12971" started-at="2022-02-06T19:36:26 EST" finished-at="2022-02-06T19:36:39 EST">
      <class name="us.piit.menu.CheckWatchList">
        <test-method status="PASS" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:us.piit.menu.CheckWatchList@7d907bac]" name="setUp" is-config="true" duration-ms="11568" started-at="2022-02-06T19:36:26 EST" finished-at="2022-02-06T19:36:38 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://www.amazon.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="checkWatchList()[pri:0, instance:us.piit.menu.CheckWatchList@7d907bac]" name="checkWatchList" duration-ms="8" started-at="2022-02-06T19:36:38 EST" finished-at="2022-02-06T19:36:38 EST">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Must provide a location for a move action.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Must provide a location for a move action.
at org.openqa.selenium.interactions.MoveMouseAction.<init>(MoveMouseAction.java:37)
at org.openqa.selenium.interactions.Actions.moveToElement(Actions.java:362)
at base.CommonAPI.hoverOver(CommonAPI.java:102)
at us.piit.HomePage.hoverOverHelloMenu(HomePage.java:62)
at us.piit.menu.CheckWatchList.checkWatchList(CheckWatchList.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWatchList -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:us.piit.menu.CheckWatchList@7d907bac]" name="afterMethod" is-config="true" duration-ms="1267" started-at="2022-02-06T19:36:38 EST" finished-at="2022-02-06T19:36:39 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- us.piit.menu.CheckWatchList -->
    </test> <!-- Amazon test -->
  </suite> <!-- Amazon Automation -->
</testng-results>
